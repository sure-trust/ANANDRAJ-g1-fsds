                 ANAND RAJ G1-FSDS

                  ASSIGNMENT -4
Top 3 customers based on the amount spent

SELECT C.CUSTOMER_ID, C.CUST_LAST_NAME, 
SUM(O.ORDER_TOTAL) AS TOTAL_SPENT
FROM DEMO_ORDERS O
JOIN DEMO_CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID, C.CUST_LAST_NAME
ORDER BY TOTAL_SPENT DESC
FETCH FIRST 3 ROWS ONLY;


Top 3 customers based on the number of orders

SELECT C.CUSTOMER_ID, C.CUST_LAST_NAME, 
COUNT(O.ORDER_ID) AS ORDER_COUNT
FROM DEMO_ORDERS O
JOIN DEMO_CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID, C.CUST_LAST_NAME
ORDER BY ORDER_COUNT DESC
FETCH FIRST 3 ROWS ONLY;


Top 3 products based on quantity sold

SELECT P.PRODUCT_ID, P.PRODUCT_NAME, SUM(OI.QUANTITY) AS TOTAL_QUANTITY
FROM DEMO_ORDER_ITEMS OI
JOIN DEMO_PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY P.PRODUCT_ID, P.PRODUCT_NAME
ORDER BY TOTAL_QUANTITY DESC
FETCH FIRST 3 ROWS ONLY;


Customerâ€™s last name, product names they bought, and total quantity of each

SELECT C.CUST_LAST_NAME, P.PRODUCT_NAME, 
SUM(OI.QUANTITY) AS TOTAL_QUANTITY
FROM DEMO_ORDERS O
JOIN DEMO_CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN DEMO_ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
JOIN DEMO_PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY C.CUST_LAST_NAME, P.PRODUCT_NAME;


Transform the rows to columns for the result from Query #4

SELECT * FROM (SELECT C.CUST_LAST_NAME, P.PRODUCT_NAME, 
SUM(OI.QUANTITY) AS TOTAL_QUANTITY
FROM DEMO_ORDERS O
JOIN DEMO_CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN DEMO_ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
JOIN DEMO_PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY C.CUST_LAST_NAME, P.PRODUCT_NAME
)
PIVOT (
  SUM(TOTAL_QUANTITY) FOR PRODUCT_NAME IN (
     'Business Shirt' AS Business_Shirt, 
     'Trousers' AS Trousers, 
     'Jacket' AS Jacket, 
     'Blouse' AS Blouse, 
     'Skirt' AS Skirt, 
     'Ladies Shoes' AS Ladies_Shoes, 
     'Belt' AS Belt, 
     'Bag' AS Bag, 
     'Mens Shoes' AS Mens_Shoes, 
     'Wallet' AS Wallet
    )
);


Year with most orders

SELECT EXTRACT(YEAR FROM O.ORDER_TIMESTAMP) AS ORDER_YEAR, 
COUNT(O.ORDER_ID) AS ORDER_COUNT
FROM DEMO_ORDERS O
GROUP BY EXTRACT(YEAR FROM O.ORDER_TIMESTAMP)
ORDER BY ORDER_COUNT DESC
FETCH FIRST 1 ROW ONLY;


Product category that was most sold

SELECT P.CATEGORY, SUM(OI.QUANTITY) AS TOTAL_QUANTITY
FROM DEMO_ORDER_ITEMS OI
JOIN DEMO_PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY P.CATEGORY
ORDER BY TOTAL_QUANTITY DESC
FETCH FIRST 1 ROW ONLY;


Product category that took the second position in terms of quantity sold

SELECT P.CATEGORY, SUM(OI.QUANTITY) AS TOTAL_QUANTITY
FROM DEMO_ORDER_ITEMS OI
JOIN DEMO_PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY P.CATEGORY
ORDER BY TOTAL_QUANTITY DESC
OFFSET 1 ROWS FETCH NEXT 1 ROW ONLY;


Query to help rollup total quantity on customer and product (name)

SELECT C.CUST_LAST_NAME, P.PRODUCT_NAME, 
SUM(OI.QUANTITY) AS TOTAL_QUANTITY
FROM DEMO_ORDERS O
JOIN DEMO_CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN DEMO_ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
JOIN DEMO_PRODUCTS P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY ROLLUP (C.CUST_LAST_NAME, P.PRODUCT_NAME);



